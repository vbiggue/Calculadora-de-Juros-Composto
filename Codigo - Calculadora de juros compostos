{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOeVSngrgOuFF4ed5+AawZU",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/vbiggue/Calculadora-de-Juros-Composto/blob/main/Codigo%20-%20Calculadora%20de%20juros%20compostos\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-EEdR8L7Vig5",
        "outputId": "4819c635-a79a-498c-f2c3-1695bc5e6e15"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'int'>\n"
          ]
        }
      ],
      "source": [
        "idade = 5\n",
        "\n",
        "print(type(idade))"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Valor = 4.56\n",
        "\n",
        "print(type(Valor))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "h3Etwt1YVpFk",
        "outputId": "1fb6aacb-52f1-4d8d-b5db-da80b17c9caf"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'float'>\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Nome = 'Vinicius'\n",
        "Sobrenome = 'Biggue'\n",
        "\n",
        "print(type(Nome))\n",
        "print(type(Sobrenome))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xz3rWxmbXAFy",
        "outputId": "996028d7-835f-44ec-a55b-4bcc717f8b30"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'str'>\n",
            "<class 'str'>\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "nota = 9\n",
        "\n",
        "if nota >= 5:\n",
        "  situacao = True\n",
        "else:\n",
        "  situacao = False\n",
        "\n",
        "print(situacao)\n",
        "print(type(situacao))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Gd3Wct3vYWbS",
        "outputId": "caab9d4b-7444-43a9-aa86-7c3ecb2e98bf"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "True\n",
            "<class 'bool'>\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "prova_parte_1 = 4\n",
        "prova_parte_2 = 3\n",
        "\n",
        "nota_final = prova_parte_1 + prova_parte_2\n",
        "print(nota_final)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1OA9DHvFbkdw",
        "outputId": "afca3d05-4f14-47fd-a5a6-59968a854037"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "7\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "valor_produto = 100\n",
        "valor_imposto = 27\n",
        "\n",
        "valor_real = valor_produto - valor_imposto\n",
        "print(valor_real)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "smfXePnpeci4",
        "outputId": "5c112df6-3add-4edf-f29a-0e984043c483"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "73\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "volume_do_tanque = 42\n",
        "\n",
        "eficiencia_km = volume_do_tanque * 9.5 #no caso 9.5 é a quantidade de km que o carro roda com 1 litro de gasolina\n",
        "\n",
        "print(f'Rendimento do tanque: {eficiencia_km} Km')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CCp6ErWpe6xB",
        "outputId": "ebbeae2b-0b94-472e-8e70-8940156557c7"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Rendimento do tanque: 399.0 Km\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "valor_total_compra = 1500\n",
        "quantidade_produtos = 9\n",
        "\n",
        "valor_unitario_exato = valor_total_compra / quantidade_produtos #utilizando o operador divisão exata\n",
        "valor_unitario_inteiro = valor_total_compra // quantidade_produtos #utilizando o operador divisão inteira\n",
        "print(f'Divisão Exata: {valor_unitario_exato}')\n",
        "print(f'Divisão Inteira: {valor_unitario_inteiro}')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "85UukRWDfqtH",
        "outputId": "202cd6b1-dd33-4f06-850b-a7685615db55"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Divisão Exata: 166.66666666666666\n",
            "Divisão Inteira: 166\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "valor_total_compra = 1500\n",
        "quantidade_produtos = 9\n",
        "\n",
        "Modulo = valor_total_compra % quantidade_produtos\n",
        "\n",
        "\n",
        "print(f'Modulo: {Modulo}')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6jNj4PtUjyl-",
        "outputId": "b3be0609-f2dd-4e6e-e971-3ac5681351b5"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Modulo: 6\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "valor = 10\n",
        "potencia = 2\n",
        "\n",
        "resultado = valor ** potencia\n",
        "print(resultado)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KI7pw9vGk_m2",
        "outputId": "e7e8adf9-2d4e-4f93-8b24-9ad3a0b7ff53"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "100\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "nome_cliente = str(input('Insira o nome do cliente: '))\n",
        "investimento_inicial = float(input('Insira o investimento inicial R$: '))\n",
        "investimento_mensal = float(input('Insira o investimento mensal R$: '))\n",
        "perido = int(input('Insira a quantidade de parcelas: '))\n",
        "taxa_juros = float(input('Insira a taxa mensal: '))\n",
        "\n",
        "valor_final ="
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2X6Yo37klsZ8",
        "outputId": "3f3b4ef5-4d81-452e-a7af-43ea6d4d5f1b"
      },
      "execution_count": 48,
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Insira o nome do cliente: v\n",
            "Insira o investimento inicial R$: 100\n",
            "Insira o investimento mensal R$: 23.54\n",
            "Insira a quantidade de parcelas: 3\n",
            "Insira a taxa mensal: 325\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "TYb58fmdniyS"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}